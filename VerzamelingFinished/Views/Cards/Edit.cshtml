@model VerzamelingFinished.Models.Card

@{
    ViewData["Title"] = "Edit";
}

<h1>Edit</h1>

<h4>Card</h4>
<hr />
<div class="row">
    <div class="col-md-4">
        <form asp-action="Edit">
            <div asp-validation-summary="ModelOnly" class="text-danger"></div>
            <input type="hidden" asp-for="Id" />
            <div class="form-group">
                <label asp-for="Name" class="control-label"></label>
                <input asp-for="Name" class="form-control" />
                <span asp-validation-for="Name" class="text-danger"></span>
            </div>
            <div class="form-group">
                <label asp-for="Description" class="control-label"></label>
                <input asp-for="Description" class="form-control" />
                <span asp-validation-for="Description" class="text-danger"></span>
            </div>
            <div class="form-group">
                <label asp-for="Element" class="control-label"></label>
                <select asp-for="Element" class="form-control">
                    <option value="Fire">Fire</option>
                    <option value="Water">Water</option>
                    <option value="Grass">Grass</option>
                    <option value="Normal">Normal</option>
                    <option value="Electric">Electric</option>
                    <option value="Ice">Ice</option>
                    <option value="Fighting">Fighting</option>
                    <option value="Poison">Poison</option>
                    <option value="Ground">Ground</option>
                    <option value="Flying">Flying</option>
                    <option value="Psychic">Psychic</option>
                    <option value="Bug">Bug</option>
                    <option value="Rock">Rock</option>
                    <option value="Ghost">Ghost</option>
                    <option value="Dragon">Dragon</option>
                    <option value="Dark">Dark</option>
                    <option value="Steel">Steel</option>
                    <option value="Fairy">Fairy</option>
                </select>
                <span asp-validation-for="Element" class="text-danger"></span>
            </div>
            <div class="form-group">
                <label asp-for="Price" class="control-label"></label>
                <input asp-for="Price" class="form-control" />
                <span asp-validation-for="Price" class="text-danger"></span>
            </div>
            <div class="form-group">
                <label asp-for="Quantity" class="control-label"></label>
                <input asp-for="Quantity" class="form-control" />
                <span asp-validation-for="Quantity" class="text-danger"></span>
            </div>
            <div class="form-group">
                <label asp-for="Image" class="control-label"></label>
                <input asp-for="Image" class="form-control" />
                <span asp-validation-for="Image" class="text-danger"></span>
            </div>




            <div>
        <label>Select Decks:</label>
                @foreach (var deck in (List<VerzamelingFinished.Models.Deck>)ViewData["AvailableDecks"])  // Iterate through available decks using the AvailableDecks ViewData in the Cardcontroller
        {
            <div>
                <input type="checkbox" name="selectedDeckIds" value="@deck.Id" @* makes checkboxes for each decks that are in the database *@
                        @(((List<int>)ViewData["SelectedDeckIds"]).Contains(deck.Id) ? "checked" : "") /> @* applies the SelectedDeckIds Viewdata in the Cardcontroller to all checked Decks to apply edit changes *@
                <label>@deck.Name</label> @* Display the decknames next to the checkboxes *@
            </div>
        }
    </div>

            <div class="form-group">
                <input type="submit" value="Save" class="btn btn-primary" />
            </div>
        </form>
    </div>
</div>

<div>
    <a asp-action="Index">Back to List</a>
</div>

@section Scripts {
    @{await Html.RenderPartialAsync("_ValidationScriptsPartial");}
}
